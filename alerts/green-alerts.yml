apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: green-alerts
  namespace: "default"
  labels:
    release: prometheus
spec:
  groups:
    - name: Green

      rules:
        ############################
        ############################

        - alert: AppDown
          expr: up{job="green-app"} != 1
          labels:
            severity: critical
          annotations:
            summary: "Green App is down"
            description: "Prometheus has detected the green application is not running"

        ############################
        ############################

        - alert: Latency 5m Interval
          expr: |
            latency:rate5m{job="green-app"} > .2
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green latency is over 200ms within 5m interval"
            description: "Prometheus has detected the green application latency is over 200ms"

        - alert: Latency 15m Interval
          expr: |
            latency:rate15m{job="green-app"} > .2
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green latency is over 200ms within 15m interval"
            description: "Prometheus has detected the green application latency is over 200ms"

        - alert: Latency 30m Interval
          expr: |
            latency:rate30m{job="green-app"} > .2
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green latency is over 200ms within 30m interval"
            description: "Prometheus has detected the green application latency is over 200ms"

        - alert: Latency 60m Interval
          expr: |
            latency:rate60m{job="green-app"} > .2
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green latency is over 200ms within 60m interval"
            description: "Prometheus has detected the green application latency is over 200ms"

        ############################
        ############################

        - alert: Success Rate 5m Interval
          expr: |
            successrate:rate5m{job="green-app"} < .998
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green success rate is below 99.8% within 5m interval"
            description: "Prometheus has detected the green application success rate is below 99.8%"

        - alert: Success Rate 15m Interval
          expr: |
            successrate:rate15m{job="green-app"} < .998
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green success rate is below 99.8% within 15m interval"
            description: "Prometheus has detected the green application success rate is below 99.8%"

        - alert: Success Rate 30m Interval
          expr: |
            successrate:rate30m{job="green-app"} < .998
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green success rate is below 99.8% within 30m interval"
            description: "Prometheus has detected the green application success rate is below 99.8%"

        - alert: Success Rate 60m Interval
          expr: |
            successrate:rate60m{job="green-app"} < .998
          labels:
            job: green-app
            severity: critical
          annotations:
            summary: "Green success rate is below 99.8% within 60m interval"
            description: "Prometheus has detected the green application success rate is below 99.8%"

        ############################
        ############################

        - alert: Spike in CPU Usage
          expr: irate(container_cpu_usage_seconds_total{container="planetarium", pod=~"planetarium-deployment-green.*"}[5m]) > 0.2
          labels:
            severity: critical
          annotations:
            summary: "Spike in CPU Usage Detected"
            description: "Prometheus has detected one of the green app has High CPU usage"

        - alert: High CPU Usage 5m Interval
          expr: rate(container_cpu_usage_seconds_total{container="planetarium", pod=~"planetarium-deployment-green.*"}[5m]) > 0.15
          labels:
            severity: critical
          annotations:
            summary: "High CPU Usage Detected"
            description: "Prometheus has detected one of the green app has High CPU usage"

        - alert: High CPU Usage 10m Interval
          expr: rate(container_cpu_usage_seconds_total{container="planetarium", pod=~"planetarium-deployment-green.*"}[10m]) > 0.15
          labels:
            severity: critical
          annotations:
            summary: "High CPU Usage Detected"
            description: "Prometheus has detected one of the green app has High CPU usage"

        - alert: High CPU Usage 15m Interval
          expr: rate(container_cpu_usage_seconds_total{container="planetarium", pod=~"planetarium-deployment-green.*"}[15m]) > 0.15
          labels:
            severity: critical
          annotations:
            summary: "High CPU Usage Detected"
            description: "Prometheus has detected one of the green app has High CPU usage"

        - alert: High CPU Usage 30m Interval
          expr: rate(container_cpu_usage_seconds_total{container="planetarium", pod=~"planetarium-deployment-green.*"}[30m]) > 0.15
          labels:
            severity: critical
          annotations:
            summary: "High CPU Usage Detected"
            description: "Prometheus has detected one of the green app has High CPU usage"

        - alert: High CPU Usage 60m Interval
          expr: rate(container_cpu_usage_seconds_total{container="planetarium", pod=~"planetarium-deployment-green.*"}[60m]) > 0.15
          labels:
            severity: critical
          annotations:
            summary: "High CPU Usage Detected"
            description: "Prometheus has detected one of the green app has High CPU usage"

        ############################
        ############################
        ## Fires an alert when current memory usage is above ~384 MB

        - alert: High memory Usage
          expr: container_memory_working_set_bytes{container="planetarium", pod=~"planetarium-deployment-green.*"} > 400000000
          labels:
            severity: critical
          annotations:
            summary: "High memory Usage Detected"
            description: "Prometheus has detected one of the green app has High memory usage"

        ############################
        ############################
        ## Latency Recording Rules

        - expr: |
            sum(rate(http_server_requests_seconds_sum{job="green-app"}[5m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[5m]))
          labels:
            job: green-app
          record: latency:rate5m

        - expr: |
            sum(rate(http_server_requests_seconds_sum{job="green-app"}[15m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[15m]))
          labels:
            job: green-app
          record: latency:rate15m

        - expr: |
            sum(rate(http_server_requests_seconds_sum{job="green-app"}[30m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[30m]))
          labels:
            job: green-app
          record: latency:rate30m

        - expr: |
            sum(rate(http_server_requests_seconds_sum{job="green-app"}[60m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[60m]))
          labels:
            job: green-app
          record: latency:rate60m

        ############################
        ############################
        ## Success Rate Recording Rules

        - expr: |
            sum(rate(http_server_requests_seconds_count{job="green-app", outcome!="SERVER_ERROR"}[5m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[5m]))
          labels:
            job: green-app
          record: successrate:rate5m

        - expr: |
            sum(rate(http_server_requests_seconds_count{job="green-app", outcome!="SERVER_ERROR"}[15m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[15m]))
          labels:
            job: green-app
          record: successrate:rate15m

        - expr: |
            sum(rate(http_server_requests_seconds_count{job="green-app", outcome!="SERVER_ERROR"}[30m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[30m]))
          labels:
            job: green-app
          record: successrate:rate30m

        - expr: |
            sum(rate(http_server_requests_seconds_count{job="green-app", outcome!="SERVER_ERROR"}[60m]))
            /
            sum(rate(http_server_requests_seconds_count{job="green-app"}[60m]))
          labels:
            job: green-app
          record: successrate:rate60m

        ############################
        ############################
        ## 99 Percentile Latency Recording Rules

        - expr: |
            histogram_quantile(0.99, sum by(le) (rate(http_server_requests_seconds_bucket{job="green-app"}[5m])))
          labels:
            job: green-app
          record: latency99:rate5m

        - expr: |
            histogram_quantile(0.99, sum by(le) (rate(http_server_requests_seconds_bucket{job="green-app"}[15m])))
          labels:
            job: green-app
          record: latency99:rate15m

        - expr: |
            histogram_quantile(0.99, sum by(le) (rate(http_server_requests_seconds_bucket{job="green-app"}[30m])))
          labels:
            job: green-app
          record: latency99:rate30m

        - expr: |
            histogram_quantile(0.99, sum by(le) (rate(http_server_requests_seconds_bucket{job="green-app"}[60m])))
          labels:
            job: green-app
          record: latency99:rate60m
